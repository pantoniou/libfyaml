#!/usr/bin/env bash

count=0
for basetst in test-suite-data/[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]/; do
	for tst in ${basetst} ${basetst}[0-9][0-9]/ ${basetst}[0-9][0-9][0-9]/; do
		# there must be a test there
		if [ ! -e "$tst/===" ]; then
			continue
		fi
		# ignore tests which are expected to fail
		if [ -e "$tst/error" ]; then
			continue
		fi
		# a json file must be there
		if [ ! -e "$tst/in.json" ]; then
			continue
		fi
		count=`expr $count + 1`
	done
done

# output plan
echo 1..$count

declare -A xfails=(
	[UGM3]="Later jq versions rewrite numbers like 12.00 -> 12 which breaks diff"
)
declare -A skips=(
	[C4HZ]="requires schema support which libfyaml does not support yet."
)

i=0
for basetst in test-suite-data/[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]/; do

	for tst in ${basetst} ${basetst}[0-9][0-9]/ ${basetst}[0-9][0-9][0-9]/; do

		# ignore tests which are expected to fail
		if [ -e "$tst/error" ]; then
			continue
		fi
		# a json file must be there
		if [ ! -e "$tst/in.json" ]; then
			continue
		fi

		i=`expr $i + 1`

		# strip trailing /
		t=${tst%/}
		# remove test-suite-data/
		test_subtest_id=`echo $t | cut -d/ -f2-`
		test_id=`echo $test_subtest_id | cut -d/ -f1`
		subtest_id=`echo $test_subtest_id | cut -s -d/ -f2`

		desctxt=`cat 2>/dev/null "$tst/==="`

		directive=""
		skip_reason="${skips[$test_subtest_id]}"
		if [ "x$skip_reason" != "x" ]; then
			directive=" # SKIP: ${skip_reason}"
		fi

		res="ok"
		if [ "x$skip_reason" == "x" ]; then
			t1=`mktemp`
			t2=`mktemp`

			# output yaml in json format
			${TOP_BUILDDIR}/src/fy-tool --dump --strip-labels --strip-tags --strip-doc -r -mjson "$tst/in.yaml" | "${JQ}" --sort-keys . >"$t1"

			# do the same with the json input (canonicalize)
			cat "$tst/in.json" | "${JQ}" --sort-keys . > "$t2"

			diff -u "$t1" "$t2"
			if [ $? -eq 0 ]; then
				res="ok"
			else
				res="not ok"
			fi

			rm -f "$t1" "$t2"

			xfail_reason="${xfails[$test_subtest_id]}"
			if [ "x$xfail_reason" != "x" ]; then
				directive=" # TODO: ${xfail_reason}"
			fi
		fi

		echo "$res $i $test_subtest_id - $desctxt (JSON)$directive"
	done
done
